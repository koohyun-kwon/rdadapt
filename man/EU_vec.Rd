% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cvec_choice.R
\name{EU_vec}
\alias{EU_vec}
\title{Distance from Oracle Helper Function: Mean}
\usage{
EU_vec(Cpr, Cvec, C, Xt, Xc, mon_ind, sigma_t, sigma_c, alpha, tau_res, bmat)
}
\arguments{
\item{Cpr}{the Lipschitz coefficient where the distance is evaluated at.}

\item{Cvec}{a sequence of smoothness parameters}

\item{C}{the Lipschitz coefficient for the function space we consider.}

\item{Xt}{\eqn{n_t} by \eqn{k} design matrix for the treated units.}

\item{Xc}{\eqn{n_c} by \eqn{k} design matrix for the control units.}

\item{mon_ind}{index number for monotone variables.}

\item{sigma_t}{standard deviation of the error term for the treated units
(either length 1 or \eqn{n_t}).}

\item{sigma_c}{standard deviation of the error term for the control units
(either length 1 or \eqn{n_c}).}

\item{alpha}{desired upper quantile value.}

\item{tau_res}{a list produced by the function \code{tau_calc};
can be left unspecified.}

\item{bmat}{a matrix of modulus values to be used in the adaptive procedure;
can be left unspecified.}
}
\value{
J-dimensional vector containing values of \eqn{E U_j}'s.
}
\description{
Calculates \eqn{E U_j} in Proposition 4.4 of the paper (Ver20201104)
}
\examples{
n <- 500
d <- 2
X <- matrix(rnorm(n * d), nrow = n, ncol = d)
tind <- X[, 1] < 0 & X[, 2] < 0
Xt <- X[tind == 1, ,drop = FALSE]
Xc <- X[tind == 0, ,drop = FALSE]
mon_ind <- c(1, 2)
sigma <- rnorm(n)^2 + 1
sigma_t <- sigma[tind == 1]
sigma_c <- sigma[tind == 0]
EU_vec(1/4, (1:5)/5, 2, Xt, Xc, mon_ind, sigma_t, sigma_c, 0.05)
}
